<!DOCTYPE html>
<html lang="zh">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Registration</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@1.0.0/css/bulma.min.css">
    <link href="https://cdn.bootcss.com/font-awesome/5.13.0/css/all.css" rel="stylesheet">
    <script src="https://challenges.cloudflare.com/turnstile/v0/api.js" async defer></script>
</head>

<body>
<section class="section">
    <div class="container">
        <div class="columns is-centered">
            <div class="column is-half">
                <div id="msgDiv"></div>
                <form action="/registration" method="POST" id="RegForm">
                    <div class="field">
                        <label class="label">邮箱地址</label>
                        <div class="control has-icons-left">
                            <input class="input" type="email" name="email" id="email"
                                   placeholder="e.g. hello@example.com" required>
                            <span class="icon is-small is-left">
                                    <i class="fas fa-envelope"></i>
                                </span>
                        </div>
                    </div>
                    <div class="cf-turnstile" data-sitekey="{{.site_key}}" data-callback="turnstileCallback"></div>
                    <div class="field">
                        <div class="control">
                            <button type="submit" class="button is-primary" id="submitBtn" disabled>提交</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</section>
<script>
    /**
     * @type {string}
     */
    let cfToken = undefined;
    /**
     * @type {User}
     */
    let tgUser = undefined;
    /**
     * @param {string} token
     */
    window.turnstileCallback = function (token) {
        console.log("verified", token);
        cfToken = token;
        document.getElementById("submitBtn").disabled = false;
    };

    document.getElementById("RegForm").addEventListener("submit", (e) => {
        const form = e.target;
        if (!form.checkValidity()) {
            e.preventDefault();
            return;
        }
        e.preventDefault();

        const formData = {
            provider_type: "Telegram",
            cf_token: cfToken,
            data: {
                email: form.elements["email"].value
            }
        };
        regReq(formData);
    });

    function regReq(body) {
        return fetch("/registration", {
            method: "POST",
            body: JSON.stringify(body)
        }).catch(e => {
            console.log("reg err", e);
            showErrorMessage("Network Error");
        }).then(r => r.json()).then(j => {
            if (j.code === 0) {
                window.location.replace("/login");
            } else {
                console.error(j);
                showErrorMessage(JSON.stringify(j));
            }
        });
    }

    function showErrorMessage(message) {
        document.getElementById("msgDiv").innerHTML = `
        <div class="notification is-danger">
            <button class="delete"></button>
            ${message}
        </div>
        `
    }

</script>
</body>

</html>
